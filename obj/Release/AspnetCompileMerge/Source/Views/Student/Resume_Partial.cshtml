

@{
    ViewBag.Title = "Resume_Partial";

}

@model List<Jobb.Models.resume>
@using Jobb.Models;
@{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "Res";
            settings.KeyFieldName = "ID_Resume";
            settings.Width = Unit.Percentage(100);
            settings.CallbackRouteValues = new { Controller = "Student", Action = "Resume_Partial" };
            settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Student", Action = "Edit_Resume" };
            settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
            settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.DblClick;
            settings.SettingsSearchPanel.Visible = true;
            settings.Settings.ShowGroupPanel = true;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsSearchPanel.ShowClearButton = true;
            settings.SettingsSearchPanel.ShowApplyButton = true;
            settings.CommandColumn.ShowDeleteButton = true;
            settings.SettingsCommandButton.NewButton.Image.IconID = IconID.SaveSaveandnew16x16office2013;
            settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.EditDelete16x16office2013;
            settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.SaveSaveandclose16x16office2013;
            settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.SaveSaveall16x16office2013;
            settings.SettingsCommandButton.SearchPanelApplyButton.Image.IconID = IconID.ActionsSearch16x16devav;
            settings.SettingsCommandButton.SearchPanelClearButton.Image.IconID = IconID.EditDelete16x16office2013;
            settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 2;
            settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
            settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 800;
            settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
            settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
            settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
            settings.CommandColumn.Visible = true;
            settings.CommandColumn.ShowNewButtonInHeader = true;
            settings.CommandColumn.ShowDeleteButton = true;
            settings.SettingsBehavior.ConfirmDelete = true;


            settings.Columns.Add(s =>
            {
                s.FieldName = "Grade";
                s.Caption = "เกรด";
                s.ColumnType = MVCxGridViewColumnType.SpinEdit;
                var Set = s.PropertiesEdit as SpinEditProperties;
                Set.NumberFormat = SpinEditNumberFormat.Number;
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Height";
                s.Caption = "ส่วนสูง";
                s.ColumnType = MVCxGridViewColumnType.SpinEdit;
                var Set = s.PropertiesEdit as SpinEditProperties;
                Set.NumberFormat = SpinEditNumberFormat.Number;
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Weight";
                s.Caption = "น้ำหนัก";
                s.ColumnType = MVCxGridViewColumnType.SpinEdit;
                var Set = s.PropertiesEdit as SpinEditProperties;
                Set.NumberFormat = SpinEditNumberFormat.Number;
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Status";
                s.Caption = "สถานะ";
                s.ColumnType = MVCxGridViewColumnType.ComboBox;
                var Set = s.PropertiesEdit as ComboBoxProperties;
                Set.DataSource = Enumeration.GetAll<modelEnum.statusprofie>();
                Set.ValueField = "Key";
                Set.TextField = "Value";
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Nationality";
                s.Caption = "สัญชาติ";
                s.ColumnType = MVCxGridViewColumnType.ComboBox;
                var Set = s.PropertiesEdit as ComboBoxProperties;
                Set.DataSource = Enumeration.GetAll<modelEnum.Nationality>();
                Set.ValueField = "Key";
                Set.TextField = "Value";
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Region";
                s.Caption = "ศาสนา";
                s.ColumnType = MVCxGridViewColumnType.ComboBox;
                var Set = s.PropertiesEdit as ComboBoxProperties;
                Set.DataSource = Enumeration.GetAll<modelEnum.Region>();
                Set.ValueField = "Key";
                Set.TextField = "Value";
            });

            settings.Columns.Add(s =>
            {
                s.FieldName = "Career_Objective";
                s.Caption = "Career Objective";
                s.ColumnType = MVCxGridViewColumnType.TextBox;
                var Set = s.PropertiesEdit as TextBoxProperties;
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Skills";
                s.Caption = "Skills";
                s.ColumnType = MVCxGridViewColumnType.TextBox;
                var Set = s.PropertiesEdit as TextBoxProperties;
            });
            settings.Columns.Add(s =>
            {
                s.FieldName = "Education";
                s.Caption = "Education";
                s.ColumnType = MVCxGridViewColumnType.TextBox;
                var Set = s.PropertiesEdit as TextBoxProperties;
            });

            settings.Columns.Add(s =>
            {
                s.FieldName = "Project";
                s.Caption = "Project";
                s.ColumnType = MVCxGridViewColumnType.TextBox;
                var Set = s.PropertiesEdit as TextBoxProperties;
            });
            settings.InitNewRow = (s, e) =>
            {
                e.NewValues["ID_Pro"] = 1;
            };
            settings.CellEditorInitialize = (s, e) =>
            {
                ASPxEdit editor = (ASPxEdit)e.Editor;
                editor.ValidationSettings.Display = Display.None;
            };
        });
}
@grid.Bind(Model).GetHtml()


